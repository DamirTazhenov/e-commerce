version: '3.9'

services:
  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_STAGE}
      POSTGRES_USER: ${POSTGRES_USER_STAGE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_STAGE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8000"
    depends_on:
      - db
    deploy:
      replicas: 3  # Настроим 3 реплики для веб-приложения
      restart_policy:
        condition: on-failure
    expose:
      - "8000"

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx_eccomerce
    ports:
      - "80:80"
    depends_on:
      - web
      - redis

  redis:
    image: redis:alpine
    container_name: e-commerce-redis
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config worker -l info -Q default -n default
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis
    deploy:
      restart_policy:
        condition: on-failure

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

#  celery-exporter:
#    image: oliver006/celery-exporter
#    environment:
#      - BROKER_URL=redis://redis:6379/0  # Make sure this matches your Redis setup
#    ports:
#      - "5555:5555"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  grafana_data: